<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imgClctnSmartViewer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v11.2" name="DevExpress.Utils.v11.2, Version=11.2.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="imgClctnSmartViewer.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v11.2" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYxMS4yLCBWZXJzaW9uPTExLjIu
        Ny4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI4OGQxNzU0ZDcwMGU0OWEMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAABIAAAASAAAACQUAAAAP
        BQAAAFIHAAACwQIAAIlQTkcNChoKAAAADUlIRFIAAAASAAAAEggGAAAAVs6OVwAAAARzQklUCAgICHwI
        ZIgAAAABc1JHQgCuzhzpAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAALDgAACw4BQL7hQQAAABZ0RVh0
        Q3JlYXRpb24gVGltZQAwOC8wNi8xMv9MprYAAAAcdEVYdFNvZnR3YXJlAEFkb2JlIEZpcmV3b3JrcyBD
        UzVxteM2AAAB/ElEQVQ4T63TTU8TQRwG8PkgfgE/Al/EAxEiIlYsAmVLQ5q2QLGAFWIILyYE7xhi4g0O
        xqRgxYuJN9+QeCCEvux2t6VCAjMPz8wiu0QMSjj8OtPp/J/pzswKANfirLM5I8ROoQVhb3LB75cxH2+z
        fshxswh58ME4ar4zYavpfwsTH1/cNCHq8D1wuAn1a8Mw/YOiCSvO3hBrKSEKeSHWn4ZMC/E65i9kQmRj
        GWiuQNVfQjVIt4T9FY6/Ove4f+MH1eag3AWo2jzbsAVItmgsXqy5BG97Igg6rqYgnWFIewTKHjWkQ7rl
        mE+PZ2nsDGo5uN/ioaByN2T1EfVRP2QlxvY3fjdiUJWBUxbnWIAdh/u5KxS01w5Z7qBO6qL75yiOqfID
        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
        D6cXh1pFo9d8L8EAAAAASUVORK5CYIIL
</value>
  </data>
</root>